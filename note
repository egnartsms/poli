=====
Name mangling

- M (or capitalization of the following char)
~ I
! X
@ T
% R
^ C
& S
* A
_ (remains the same)
+ P
= E
? Q
< L
> G
: O


Mangling examples:

set-border-color -> setBorderColor
set-border-color! -> setBorderColor_X
falsy? -> falsy_Q
<interface> -> _Linterface_G
calm-- -> calm_M_M
calm-X -> calm_MX
calm-x -> calmX




Syntax objects
-----

{
   stx: 'nl',
   nl: 1
}

{
   stx: '\\nl',
   nl: 1
}

{
   stx: 'comment',
   lines: ['line-1', 'line-2', ...],
   nl: 1
}

{
   stx: 'id',
   id: ...,
   nl: 0
}

{
   stx: 'str',
   str: "....",
   nl: 0
}

{
   stx: 'num',
   num: 345,
   nl: 0
}

{
   stx: 'kw',
   kw: 'if-not:',
   nl: 0
}

{
   stx: '()',
   nl: 0,
   sub: [...]
}



=======

Smart modes:

- strict: don't allow to introduce more build-time broken things (imports of non-existent
  entries, entries that throw at evaluation). It's allowed though to create functions
  that refer to non-existent entries. Rename of entry or import entails changes of all
  usages of this name (smart rename). If smart rename is impossible (e.g. name
  collision), we abort the whole operation.

- tolerant: allow to introduce more broken things but also try to smart rename. If smart
  rename is impossible, then do it partially (wherever possible).

- off: allow to introduce more broken things and don't smart rename. This is almost
  equivalent of plain text editing.


"Smart rename" implies:

  - on entry rename, fix all its usages within the same module, all its imports and all
    the usages of the imports in other modules;

  - on import rename (or alias rename), fix all the usages of the imported name;

  - cannot delete an entry if something depends on it at build time;

  - cannot add an entry with non-existent build-time dependencies.


=======
Bootload reactivity


def cell
binding cell


def cell:
  - syntactically broken
  - depends on unset binding
  - computed


binding cell:
  - unset
  - 